services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - app_network
    # Simple healthcheck to know when rabbitmq is ready
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./visum
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - ./visum/.env
    environment:
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=100MB
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=100MB
    volumes:
      - ./tmp:/tmp
    networks:
      - app_network

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - ./worker/.env
    environment:
      - PYTHONUNBUFFERED=1  # Force Python to run unbuffered
      - LOG_LEVEL=DEBUG  # Control logging level via environment
    volumes:
      - ./tmp:/tmp
    networks:
      - app_network
    # Ensure logs are properly captured
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:8
    container_name: redis
    ports:
      - "6379:6379"  # Optional: expose port to host for testing
    volumes:
      - redis_data:/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis_data: